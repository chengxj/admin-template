<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/Xmyappchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.edgar</groupId>
	<artifactId>admintemplate</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>Admin Template</name>
	<url>http://maven.apache.org</url>
	<description>
		使用spring，angularjs搭建的rest风格WEB项目
	</description>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<properties>
		<java.version>1.6</java.version>
		<java.encoding>UTF-8</java.encoding>
		<org.springframework.version>4.0.2.RELEASE</org.springframework.version>
		<project.build.sourceEncoding>${java.encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${java.encoding}</project.reporting.outputEncoding>
		<org.slf4j.version>1.6.1</org.slf4j.version>
		<logback.version>1.1.2</logback.version>
		<javamelody.version>1.49.0</javamelody.version>
		<junit.version>4.11</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<powermock.version>1.5.5</powermock.version>
		<querydsl.version>3.3.2</querydsl.version>
		<servlet.version>3.0</servlet.version>
		<javax.validation.version>1.1.0.Final</javax.validation.version>
		<org.hibernate.validator.version>5.0.3.Final</org.hibernate.validator.version>
		<javax.el.version>2.2</javax.el.version>
		<jackson.version>2.3.1</jackson.version>
		<c3p0.version>0.9.1.2</c3p0.version>
		<shiro.version>1.2.2</shiro.version>
		<ehcache.version>2.8.1</ehcache.version>
		<quartz.version>2.2.0</quartz.version>
		<rabbitmq.version>3.1.3</rabbitmq.version>
		<cloning.version>1.9.0</cloning.version>
		<commons.collections.version>4.0</commons.collections.version>
		<commons.lang.version>3.3.2</commons.lang.version>
		<commons.codec.version>1.8</commons.codec.version>
		<commons.io.version>2.4</commons.io.version>
		<commons.digester.version>2.1</commons.digester.version>
        <joda.version>2.2</joda.version>
        <cglib.version>2.2.2</cglib.version>
		<aspectjweaver.version>1.7.2</aspectjweaver.version>
		<mysql.version>5.1.24</mysql.version>
		<javax.mail.version>1.4.7</javax.mail.version>
		<velocity.version>1.7</velocity.version>
		<surefire.version>2.17</surefire.version>
		<cobertura.plugin.version>2.6</cobertura.plugin.version>
		<javadoc.version>2.9.1</javadoc.version>
		<checkstyle.version>2.12.1</checkstyle.version>
		<project.info.version>2.7</project.info.version>
		<site.version>3.3</site.version>
		<cors.filter.version>2.1.2</cors.filter.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.servlet</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-core</artifactId>
			<version>${javamelody.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> <groupId>com.jayway.jsonpath</groupId> <artifactId>json-path</artifactId> 
			<version>0.9.1</version> <scope>test</scope> </dependency> -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>cors-filter</artifactId>
            <version>${cors.filter.version}</version>
        </dependency>
		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-sql</artifactId>
			<version>${querydsl.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${javax.validation.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${org.hibernate.validator.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<version>${javax.el.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>${javax.el.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-instrument</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>${c3p0.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectjweaver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectjweaver.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		    <version>${commons.lang.version}</version>
		</dependency>
 		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-collections4</artifactId>
		    <version>${commons.collections.version}</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.version}</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jobs</artifactId>
			<version>${quartz.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.com.robust-it</groupId>
			<artifactId>cloning</artifactId>
			<version>${cloning.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>mail</artifactId>
		    <version>${javax.mail.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.velocity</groupId>
		    <artifactId>velocity</artifactId>
		    <version>${velocity.version}</version>
		</dependency>
		<dependency>
			<groupId>com.rabbitmq</groupId>
			<artifactId>amqp-client</artifactId>
			<version>${rabbitmq.version}</version>
		</dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>
	</dependencies>
	<profiles>
		<profile>
			<repositories>
				<repository>
					<id>spring-milestone</id>
					<name>Spring Maven MILESTONE Repository</name>
					<url>http://maven.springframework.org/milestone</url>
				</repository>
				<!-- <repository> <id>io.spring.repo.maven.milestone</id> <url>http://repo.spring.io/milestone/</url> 
					<snapshots><enabled>false</enabled></snapshots> </repository> -->
			</repositories>
		</profile>
	</profiles>
	<build>
		<finalName>${artifactId}-${version}</finalName>
		<directory>target</directory>
		<outputDirectory>target/classes</outputDirectory>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>


		<plugins>
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<showWarnings>true</showWarnings>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin> -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <configuration>
                    <files>
                        <file>${project.basedir}/src/main/resources/config.properties</file>
                    </files>
                </configuration>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<classpathScope>test</classpathScope>
					<mainClass>Tutorial</mainClass>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat6-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <path>/</path>
                    <port>${httpPort}</port>
                    <httpsPort>${httpsPort}</httpsPort>
                    <keystoreFile>${project.basedir}/certificates/15.keystore</keystoreFile>
                    <keystorePass>123456</keystorePass>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura.plugin.version}</version>
				<configuration>
					<formats>
						<format>html</format>
					</formats>
					<excludes>
						<!-- <exclude>**/interface/**.class</exclude> -->
						<exclude>**/*CrudRepository.class</exclude>
						<exclude>**/*Template.class</exclude>
					</excludes>
				</configuration>
				<!-- <executions> <execution> <goals> <goal>clean</goal> </goals> </execution> 
					</executions> -->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.version}</version>
				<configuration>
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
					<skipTests>true</skipTests>
					<forkMode>pertest</forkMode>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.version}</version>
				<configuration>
					<configLocation>${basedir}/src/main/resources/checkstyle.xml</configLocation>
					<excludes>
						**/domain/*.java, **/querydsl/*.java
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${site.version}</version>
				<configuration>
					<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
					<outputEncoding>${project.build.sourceEncoding}</outputEncoding>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>${project.info.version}</version>
							<configuration>
								<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
								<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
							</configuration>
							<reports>
								<report>index</report>
								<report>summary</report>
								<report>license</report>
								<report>dependencies</report>
								<report>scm</report>
								<report>project-team</report>
								<report>mailing-list</report>
								<report>issue-tracking</report>
							</reports>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>${cobertura.plugin.version}</version>
							<configuration>
								<formats>
									<format>html</format>
								</formats>
								<configuration>
									<formats>
										<format>html</format>
									</formats>
									<!-- <excludes>
										<exclude>com.edgar.repository/*CrudRepository.class</exclude>
										<exclude>**/*Template.class</exclude>
									</excludes> -->
								</configuration>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>${surefire.version}</version>
							<configuration>
								<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
								<skipTests>false</skipTests>
								<forkMode>pertest</forkMode>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>${checkstyle.version}</version>
							<configuration>
								<configLocation>${basedir}/src/main/resources/checkstyle.xml</configLocation>
								<excludes>
									**/domain/*.java, **/querydsl/*.java
								</excludes>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${javadoc.version}</version>
							<configuration>
								<charset>${project.build.sourceEncoding}</charset>
								<docencoding>${project.build.sourceEncoding}</docencoding>
								<encoding>${project.build.sourceEncoding}</encoding>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>2.1</version>
							<configuration>
								<outputEncoding>UTF-8</outputEncoding>
								<inputEncoding>UTF-8</inputEncoding>
								<linkJavadoc>true</linkJavadoc>
								<!-- <javadocDir>/path/to/javadocs</javadocDir> -->
							</configuration>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-maven-plugin</artifactId>
				<version>${querydsl.version}</version>
				<!-- <executions> <execution> <goals> <goal>export</goal> </goals> </execution> 
					</executions> -->
				<configuration>
					<jdbcDriver>com.mysql.jdbc.Driver</jdbcDriver>
					<jdbcUrl>jdbc:mysql://localhost:3306/admin</jdbcUrl>
					<jdbcUser>root</jdbcUser>
					<jdbcPassword></jdbcPassword>
					<packageName>com.edgar.module.sys.repository.querydsl</packageName>
					<beanPackageName>com.edgar.module.sys.repository.domain</beanPackageName>
					<lowerCase>true</lowerCase>
					<!-- <targetFolder>${project.basedir}/target/generated-sources/java</targetFolder> -->
					<targetFolder>${project.basedir}/src/main/java</targetFolder>
					<exportBeans>true</exportBeans>
					<!-- https://github.com/mysema/querydsl/blob/master/querydsl-maven-plugin/src/main/java/com/mysema/query/maven/AbstractMetaDataExportMojo.java 
						jdbcDriver class name for JDBC driver jdbcUrl JDBC url jdbcUser JDBC user 
						jdbcPassword JDBC password namePrefix name prefix for generated query classes 
						(default: Q) nameSuffix name suffix for generated query classes (default: 
						) beanPrefix name prefix for generated bean classes beanSuffix name suffix 
						for generated bean classes packageName package name where source files should 
						be generated beanPackageName package name where bean files should be generated, 
						(default: packageName) schemaPattern ant style pattern to restrict code generation 
						to certain schemas (default: null) tableNamePattern ant style pattern to 
						restrict code generation to certain tables (default: null) targetFolder target 
						folder where source filder should be generated namingStrategyClass class 
						name for NamingStrategy class (default: DefaultNamingStrategy) beanSerializerClass 
						class name for BeanSerializer class (default: BeanSerializer) serializerClass 
						class name for Serializer class (default: MetaDataSerializer) exportBeans 
						set to true to generate beans as well, see section 2.14.13 (default: false) 
						innerClassesForKeys set to true to generate inner classes for keys (default: 
						false) validationAnnotations set to true to enable serialization of validation 
						annotations (default: false) columnAnnotations export column annotations 
						(default: false) createScalaSources whether to export Scala sources instead 
						of Java sources, (default: false) schemaToPackage append schema name to package 
						(default: false) lowerCase lower case transformation of names (default: false) 
						exportTables export tables (default: true) exportViews export views (default: 
						true) -->
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>